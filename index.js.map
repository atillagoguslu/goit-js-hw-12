{"version":3,"file":"index.js","sources":["../src/js/pixabayAPI.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst searchForm = document.querySelector('.search-form');\nconst gallerySection = document.querySelector('.gallery-section');\nconst loadMoreBtn = document.querySelector('.load-more-btn');\nconst loader = document.querySelector('.loader');\n\nconst API_KEY = '49441477-341b75558156795e6f3713ba3';\nconst BASE_URL = 'https://pixabay.com/api/';\nconst PER_PAGE = 12;\n\nconst iziToastSettings = {\n  position: 'topRight',\n  timeout: 3000,\n  progressBarColor: 'rgb(0, 255, 184)',\n  transitionIn: 'fadeInLeft',\n  transitionOut: 'fadeOutRight',\n};\n\nlet fetchedData = [];\n\n// Global variables for pagination and query\nlet currentPage = 1;\nlet currentQuery = '';\nlet totalHits = 0;\nlet isLoadingMore = false; // Flag to prevent multiple load more requests\nlet autoLoadCount = 0; // Counter for automatic loads via scroll\nconst AUTO_LOAD_LIMIT = 2; // Number of times to auto-load before showing button\n\n// Hide load more button initially. It will be shown after AUTO_LOAD_LIMIT scrolls.\nloadMoreBtn.style.display = 'none';\n// Hide loader initially\nloader.style.display = 'none';\n\nconst fetchImages = async (query, page = 1) => {\n  loader.style.display = 'flex'; // Show loader when fetching starts\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page: page,\n        per_page: PER_PAGE,\n      },\n    });\n    totalHits = response.data.totalHits;\n    return response.data.hits;\n  } catch (error) {\n    iziToast.show({\n      ...iziToastSettings,\n      title: 'Error',\n      message: `ðŸŸ¥ We cannot reach the server. Please try again later. Error: ${error.message} ðŸŸ¥`,\n      color: 'red',\n    });\n    return [];\n  } finally {\n    loader.style.display = 'none'; // Ensure loader is hidden even if there's an error\n  }\n};\n\nconst handleSearch = async event => {\n  event.preventDefault();\n  const queryInput = searchForm.querySelector('input[data-search-input]');\n  const query = queryInput.value.trim();\n\n  if (!query) {\n    iziToast.show({\n      ...iziToastSettings,\n      title: 'Info',\n      message: 'Please enter a search term.',\n      color: 'blue',\n    });\n    return;\n  }\n\n  gallerySection.innerHTML = '';\n  currentPage = 1;\n  currentQuery = query;\n  totalHits = 0; // Reset total hits on new search\n  isLoadingMore = false; // Reset loading flag\n  autoLoadCount = 0; // Reset auto load counter\n  loadMoreBtn.style.display = 'none'; // Ensure button is hidden on new search\n  window.addEventListener('scroll', scrollHandler); // Re-enable scroll listener if disabled\n\n  try {\n    const images = await fetchImages(currentQuery, currentPage);\n    if (images.length === 0) {\n      iziToast.show({\n        ...iziToastSettings,\n        title: 'No Results',\n        message: `Sorry, there are no images matching your search query \"${query}\". Please try again!`,\n        color: 'yellow',\n      });\n      return;\n    }\n\n    fetchedData = images;\n    renderGallery(images);\n    // Initial check - might show button immediately if less than 5 pages total\n    checkEndOfResults();\n  } catch (error) {\n    console.error('Search handling error:', error);\n    iziToast.show({\n      ...iziToastSettings,\n      title: 'Error',\n      message: 'An unexpected error occurred during the search.',\n      color: 'red',\n    });\n  } finally {\n    queryInput.value = '';\n  }\n};\nsearchForm.addEventListener('submit', handleSearch);\n\nconst handleLoadMore = async (isScrollTriggered = false) => {\n  if (isLoadingMore) return; // Prevent multiple simultaneous loads\n\n  const totalPages = Math.ceil(totalHits / PER_PAGE);\n  if (currentPage >= totalPages) {\n    loadMoreBtn.style.display = 'none';\n    iziToast.show({\n      ...iziToastSettings,\n      title: 'Info',\n      message: \"We're sorry, but you've reached the end of search results.\",\n      color: 'blue',\n    });\n    return;\n  }\n\n  if (isScrollTriggered && autoLoadCount >= AUTO_LOAD_LIMIT) {\n    return;\n  }\n\n  isLoadingMore = true;\n  loadMoreBtn.disabled = true;\n  if (isScrollTriggered) {\n    autoLoadCount++;\n  }\n  currentPage++;\n  loader.style.display = 'flex';\n\n  try {\n    const images = await fetchImages(currentQuery, currentPage);\n    renderGallery(images);\n\n    // Smooth scroll to the new images\n    const { height: cardHeight } = document\n      .querySelector('.gallery-item')\n      .getBoundingClientRect();\n    window.scrollBy({\n      top: cardHeight * 2,\n      behavior: 'smooth',\n    });\n\n    checkEndOfResults();\n  } catch (error) {\n    console.error('Load more error:', error);\n    iziToast.show({\n      ...iziToastSettings,\n      title: 'Error',\n      message: 'Failed to load more images.',\n      color: 'red',\n    });\n  } finally {\n    isLoadingMore = false;\n    loader.style.display = 'none';\n    loadMoreBtn.disabled = false;\n  }\n};\n\n// Re-add button event listener\nloadMoreBtn.addEventListener('click', () => handleLoadMore(false)); // Pass false for isScrollTriggered\n\nlet lightbox = new SimpleLightbox('.gallery-section a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nconst createGalleryItem = image => {\n  const galleryItem = document.createElement('div');\n  galleryItem.classList.add('gallery-item');\n  galleryItem.innerHTML = `\n    <a href=\"${image.largeImageURL}\">\n      <img width=\"${image.webformatWidth}\" height=\"${image.webformatHeight}\" src=\"${image.webformatURL}\" alt=\"${image.tags}\" />\n    </a>\n    <div class=\"info\">\n      <div class=\"info-box\">\n        <b>Likes</b>\n        ${image.likes}\n      </div>\n      <div class=\"info-box\">\n        <b>Views</b>\n        ${image.views}\n      </div>\n      <div class=\"info-box\">\n        <b>Comments</b>\n        ${image.comments}\n      </div>\n      <div class=\"info-box\">\n        <b>Downloads</b>\n        ${image.downloads}\n      </div>\n    </div>\n  `;\n  return galleryItem;\n};\n\nconst renderGallery = images => {\n  const fragment = document.createDocumentFragment();\n  images.forEach(image => {\n    const galleryItem = createGalleryItem(image);\n    fragment.appendChild(galleryItem);\n  });\n  gallerySection.appendChild(fragment);\n  lightbox.refresh();\n};\n\nconst checkEndOfResults = () => {\n  const totalPages = Math.ceil(totalHits / PER_PAGE);\n  const isEndOfResults = currentPage >= totalPages;\n\n  if (isEndOfResults) {\n    loadMoreBtn.style.display = 'none';\n  } else {\n    loadMoreBtn.style.display = 'block';\n  }\n};\n\n// Infinite Scroll Logic (modified)\nconst scrollHandler = () => {\n  // Check if already loading, if there's a query, if there are hits, and if auto load limit not reached\n  if (\n    isLoadingMore ||\n    !currentQuery ||\n    totalHits === 0 ||\n    autoLoadCount >= AUTO_LOAD_LIMIT\n  )\n    return;\n\n  const { scrollTop, scrollHeight, clientHeight } = document.documentElement;\n  const totalPages = Math.ceil(totalHits / PER_PAGE);\n\n  // Check if near bottom and if there are more pages to load\n  if (\n    scrollTop + clientHeight >= scrollHeight - 150 &&\n    currentPage < totalPages\n  ) {\n    // Increased threshold slightly\n    handleLoadMore(true); // Pass true for isScrollTriggered\n  }\n};\n\n// Attach initial scroll listener\nwindow.addEventListener('scroll', scrollHandler);\n"],"names":["searchForm","gallerySection","loadMoreBtn","loader","API_KEY","BASE_URL","PER_PAGE","iziToastSettings","fetchedData","currentPage","currentQuery","totalHits","isLoadingMore","autoLoadCount","AUTO_LOAD_LIMIT","fetchImages","query","page","response","axios","error","iziToast","handleSearch","event","queryInput","scrollHandler","images","renderGallery","checkEndOfResults","handleLoadMore","isScrollTriggered","totalPages","cardHeight","lightbox","SimpleLightbox","createGalleryItem","image","galleryItem","fragment","scrollTop","scrollHeight","clientHeight"],"mappings":"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"}